services:
  postgres:
    container_name: postgres-book-sf
    image: postgres:16.4-alpine@sha256:d898b0b78a2627cb4ee63464a14efc9d296884f1b28c841b0ab7d7c42f1fffdf
    restart: always
    environment:
      - POSTGRES_DB=keploy
      - POSTGRES_USER=keploy
      - POSTGRES_PASSWORD=keploy
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-keploy}", "-U", "${POSTGRES_USER:-keploy}"]
      timeout: 5s
      retries: 5
      start_period: 6s
    ports:
      - '5432:5432'

#  php:
#    container_name: php-book-sf
#    build: docker/php
#    depends_on:
#      postgres:
#        condition: service_healthy # keploy seems to not super this kind of thing
#    depends_on:
#      - postgres
#    working_dir: "/workspace"
#    volumes:
#      - ./book:/workspace

#  nginx: # keploy don't want to listen to load balancer
#    image: nginx:alpine3.20-slim@sha256:087f90d16ce1004cf11671e229b62cc36dca1b837870aa357983954a46034d33
#    volumes:
#      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./book:/workspace
#    working_dir: /workspace
#    depends_on:
#      - php
#    ports:
#      - "${NGINX_PORT:-8080}:80"
#    container_name: nginx-book-sf
    
  php-s:
    container_name: php-s-book-store
    build: docker/php
    image: hub.skull.ovh/chadyred/keploy-php/php-s:1.0.0 # to have /var/docker/docker.sock shared...DOCKER_HOST seems to be not taken in CI :\
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    working_dir: "/workspace"
    environment:
      - APP_ENV=${APP_ENV:-test}
    volumes:
      - ./book:/workspace
#    command: "symfony server:start --listen-ip=0.0.0.0" # unable to fetch the response from the backend: unexpected EOF...keploy proxy is bad ??
#    command: "php -S 0.0.0.0:8000 public/index.php -c docker/php/php.ini" # No assets...
    command: "symfony php -S 0.0.0.0:8000 public/index.php -c docker/php/php.ini" # no error, got assets

  node:
    user: "${UID}:${GID}"
    build: ./docker/node
    image: "registry.gitlab.com/sensiolabs/tech-team/jobs-onboarding/jobs-kark/node:alpine3.20"
    volumes:
      - ./book:/workspace
    working_dir: /workspace
    profiles:
      - "frontend"
